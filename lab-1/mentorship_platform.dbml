Table users {
  user_id bigserial [pk]
  username varchar(50) [not null, unique]
  full_name varchar(120)
  email varchar(100) [not null, unique]
  password_hash varchar(200) [not null]
  country varchar(100)
  city varchar(100)
  timezone varchar(50)
  is_active boolean [not null, default: true]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp

  Note: 'Пользователи платформы. Уникальные username и email, статус активности и таймзона для корректного расписания.'
}

Table skills {
  skill_id smallserial [pk]
  name varchar(80) [not null, unique]
  category varchar(80)
  is_active boolean [not null, default: true]

  Note: 'Справочник навыков (например, Python, SQL). Уникальное имя навыка, опциональная категория.'
}

Table user_skills {
  user_id  bigint   [not null, ref: > users.user_id]
  skill_id smallint [not null, ref: > skills.skill_id]
  level    smallint [not null]        // 1..5
  years_exp smallint
  created_at timestamp [not null, default: `now()`]
  Indexes {
    (user_id, skill_id) [pk]          // составной PK, исключает дубли одной и той же пары
  }

  Note: 'Связь M:N между пользователями и навыками. level — уровень (1..5), years_exp — стаж по навыку.'
}

Table mentor_offers {
  offer_id bigserial [pk]
  mentor_id bigint   [not null, ref: > users.user_id]
  skill_id  smallint [not null, ref: > skills.skill_id]
  hourly_rate numeric(10,2) [not null]
  currency char(3) [not null]
  format varchar(30) [not null]       // online/offline/mixed
  language varchar(30)
  note varchar(400)
  status varchar(20) [not null, default: 'active'] // active/paused/archived
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp
  Indexes {
    mentor_id
    skill_id
    (skill_id, hourly_rate)
  }

  Note: 'Предложение ментора по конкретному навыку: ставка в час, валюта, формат и язык. Статус управляет видимостью в каталоге.'
}

Table bookings {
  booking_id bigserial [pk]
  offer_id  bigint [not null, ref: > mentor_offers.offer_id]
  mentee_id bigint [not null, ref: > users.user_id]
  starts_at timestamp [not null]
  ends_at   timestamp [not null]
  status varchar(20) [not null, default: 'pending'] // pending/approved/rejected/cancelled/completed/no_show
  price_total numeric(10,2)
  currency char(3)
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp
  Note: 'Заявка/бронирование менти на оффер. Интервал времени, статус процесса и итоговая цена. Бизнес-правило: ends_at > starts_at.'
  Indexes {
    offer_id
    mentee_id
    status
  }
}

Table sessions {
  session_id bigserial [pk]
  booking_id bigint [not null, ref: > bookings.booking_id] // 1:1 гарантируем через UQ ниже
  actual_started_at timestamp
  actual_ended_at   timestamp
  duration_min int
  status varchar(20) [not null, default: 'completed'] // completed/cancelled/no_show/disputed
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp
  Indexes {
    (booking_id) [unique]   // 1:1 с booking
  }

  Note: 'Факт проведения встречи по бронированию: реальные времена старта/конца, длительность и итоговый статус. Уникальность booking_id делает связь 1:1.'
}

Table session_feedbacks {
  feedback_id bigserial [pk]
  session_id bigint [not null, ref: > sessions.session_id]
  author_id  bigint [not null, ref: > users.user_id]
  target_id  bigint [not null, ref: > users.user_id]
  rating smallint [not null] // 1..5
  comment varchar(1000)
  created_at timestamp [not null, default: `now()`]
  Indexes {
    (session_id, author_id) [unique]  // один отзыв автора на сессию
    target_id
  }

  Note: 'Отзывы и оценки по сессии. Обычно автор — менти, target — ментор. Ограничение не допускает два отзыва от одного автора на одну сессию.'
}

Table messages {
  message_id bigserial [pk]
  booking_id bigint [not null, ref: > bookings.booking_id]
  author_id  bigint [not null, ref: > users.user_id]
  body varchar(5000) [not null]
  created_at timestamp [not null, default: `now()`]
  Indexes {
    booking_id
    author_id
  }

  Note: 'Сообщения чата в контексте конкретного бронирования (переписка между участниками).'
}
